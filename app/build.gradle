plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'org.jetbrains.kotlin.android'
    id 'dagger.hilt.android.plugin'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.appdistribution'
}

/*signing config*/
def keystorePropertiesFile = rootProject.file("dev_config/keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

def getKeyStoreFile() {
    "${project.rootDir.absolutePath}" + "/dev_config/dogapp.jks"
}

android {
    compileSdkVersion 31

    buildToolsVersion '31.0.0'

    defaultConfig {
        applicationId "com.dogmvvm"
        minSdkVersion 21
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {

        release {
            storeFile file(getKeyStoreFile())
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }

        debug {
            storeFile file(getKeyStoreFile())
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }

    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable false
        }

        debug {
            shrinkResources false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable true
        }

        applicationVariants.all { variant ->

            variant.outputs.all { output ->

                if (variant.buildType.name == "release") {
                    //Output file name : e.g.ss-release-4-0-2-106-prod-v4
                    def apkFileName = "app-release.apk"
                    output.outputFileName = apkFileName
                } else {
                    //Output file name : e.g.ss-debug-4-0-2-106-bleeding-edge-dist-v1.apk
                    def apkFileName = "app-debug12.apk"
                    output.outputFileName = apkFileName
                }
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11.toString()
    }

    buildFeatures {
        viewBinding true
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    /*Kotlin Dependency*/
    implementation "androidx.core:core-ktx:1.8.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.6.21"

    implementation 'androidx.appcompat:appcompat:1.4.0'
    implementation 'androidx.vectordrawable:vectordrawable:1.1.0'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'commons-codec:commons-codec:1.11'
    implementation 'com.squareup.picasso:picasso:2.71828'

    implementation 'androidx.activity:activity-ktx:1.5.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    implementation 'com.android.databinding:viewbinding:7.2.2'

    /*coroutine Lifecycle Scopes*/
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.5.1"

    /*Dependency Injection*/
    implementation "com.google.dagger:hilt-android:2.41"
    kapt "com.google.dagger:hilt-compiler:2.41"


    /*Coroutines*/
    def coroutines_version = "1.6.1"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    /*retrofit*/
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.2'


    // Import the Firebase BoM

    implementation platform('com.google.firebase:firebase-bom:30.3.2')


    // TODO: Add the dependencies for Firebase products you want to use

    // When using the BoM, don't specify versions in Firebase dependencies

    implementation 'com.google.firebase:firebase-analytics-ktx'



    // required if you want to use Mockito for unit tests
    testImplementation 'org.mockito:mockito-core:3.5.0'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.json:json:20210307'
    testImplementation 'androidx.test.ext:junit:1.1.3'

    // Core library
    androidTestImplementation 'androidx.test:core:1.4.0'

    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test:rules:1.4.0'

    // Assertions
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.ext:truth:1.4.0'
    androidTestImplementation 'com.google.truth:truth:1.1.3'

    // Espresso dependencies
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.4.0'
}